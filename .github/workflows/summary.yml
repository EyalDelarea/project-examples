name: "JobSummaries"
on: push

permissions:
  id-token: write
  contents: read

env:
  JFROG_CLI_LOG_LEVEL: DEBUG

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: eyaldelarea/setup-jfrog-cli@improve_summary_ui
        env:
          JF_URL: ${{ vars.JF_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
          JFROG_CLI_LOG_LEVEL: DEBUG
          JF_PROJECT: jobsummary

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.x

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: "eyaldelarea/jfrog-cli"
          ref: "new_summary_ui"

      - name: Build current CLI
        run: go build .

      - name: Checkout to project examples repository
        uses: actions/checkout@v4
        with:
          path: new-checkout-directory

      - name: Docker build
        run: |
          alias jf=../jf
          cd new-checkout-directory/docker-oci-examples/fat-manifest-example
          echo ${{ secrets.JF_PASSWORD }} | docker login ${{ vars.JF_URL }} -u ${{ secrets.JF_USER }} --password-stdin
          docker buildx install
          docker buildx create --use --name mybuilder --driver docker-container
          docker buildx build --platform=linux/amd64,linux/arm64,linux/arm/v7 --tag=ecosysjfrog.jfrog.io/docker-local/multi-lini:2 -f=Dockerfile.Fatmanifest --metadata-file=build-metadata --push .
          jf rt build-docker-create docker-local --image-file build-metadata
          docker buildx uninstall

      - name: Docker Scan
        run: |
          alias jf=../jf
          jf docker pull ecosysjfrog.jfrog.io/docker-local/multi-lini:2
          jf docker scan --vuln=true ecosysjfrog.jfrog.io/docker-local/multi-lini:2